version: "3.9"

services:
  db:
    container_name: yesyoucan-db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-supersecreto}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-miapp}
      MYSQL_USER: ${MYSQL_USER:-miusuario}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-miclave}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - internal # SOLO internal
      - proxy_net
    restart: unless-stopped
    ports:
      - "127.0.0.1:3306:3306" # solo local en el server

  api:
    container_name: yesyoucan-api
    build:
      context: ./Api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-miapp}
      DB_USER: ${MYSQL_USER:-miusuario}
      DB_PASSWORD: ${MYSQL_PASSWORD:-miclave}
      VIRTUAL_HOST: yesyoucan-api.local
      VIRTUAL_PORT: 5000
    depends_on:
      - db
    networks:
      - internal # comparte red con DB
      - proxy_net # visible por el proxy
    restart: unless-stopped

  app:
    container_name: yesyoucan-app
    build:
      context: ./App
    environment:
      NODE_ENV: production
      PORT: 3000
      VIRTUAL_HOST: yesyoucan.local,yesyoucan.cat,www.yesyoucan.cat
      VIRTUAL_PORT: 3000
    # 'serve -s dist' reescribe rutas desconocidas a index.html para Vue Router en modo history
    command: ["serve", "-s", "dist", "-l", "3000"]
    depends_on:
      - api
    networks:
      - proxy_net # no necesita internal
    restart: unless-stopped

networks:
  internal:
    name: yesyoucan-net # tu red interna (donde está la DB)
    driver: bridge
  proxy_net:
    external: true
    name: docker-net # red donde está el contenedor proxy

volumes:
  db_data:
